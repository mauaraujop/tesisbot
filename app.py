from flask import Flask, request
import util
import whatsappservice
import chatgptservice
import os # Importar os para acceder a variables de entorno

app = Flask(__name__)

# La ruta de bienvenida para verificar que el servidor est√° funcionando
@app.route('/welcome', methods=['GET'])
def index():
    return "welcome developer"

# Ruta para la verificaci√≥n del token de WhatsApp (GET)
@app.route('/whatsapp', methods=['GET'])
def VerifyToken():
    try:
        accessToken = "341894BASDASD" # Tu token de verificaci√≥n de WhatsApp
        token = request.args.get("hub.verify_token")
        challenge = request.args.get("hub.challenge")

        if token is not None and challenge is not None and token == accessToken:
            return challenge
        else:
            return "", 400
    except Exception as e: # Captura la excepci√≥n para depuraci√≥n (CAMBIO: A√±adido manejo de excepci√≥n)
        print(f"Error en VerifyToken: {e}") # (CAMBIO: A√±adido print para depuraci√≥n)
        return "", 400

# Ruta para recibir mensajes de WhatsApp (POST)
@app.route('/whatsapp', methods=['POST'])
def ReceivedMessage():
    try:
        body = request.get_json()
        
        # Imprime el cuerpo completo para depuraci√≥n (opcional, puedes quitarlo despu√©s) (CAMBIO: A√±adido print para depuraci√≥n)
        print(f"Cuerpo del mensaje recibido: {body}")

        # Extrae la informaci√≥n del mensaje
        entry = (body["entry"])[0]
        changes = (entry["changes"])[0]
        value = changes["value"]
        
        # Aseg√∫rate de que haya mensajes en el valor (CAMBIO: A√±adida verificaci√≥n de 'messages' en el payload)
        if "messages" not in value:
            print("No hay mensajes en el valor recibido.") # (CAMBIO: A√±adido print para depuraci√≥n)
            return "EVENT_RECEIVED" # Devuelve 200 OK para WhatsApp

        message = (value["messages"])[0]
        number = message["from"]
        
        # Solo procesamos mensajes de texto por ahora (CAMBIO: A√±adido manejo de tipos de mensaje)
        if message["type"] == "text":
            text = util.GetTextUser(message)
            print(f"Mensaje recibido de {number}: {text}") # (CAMBIO: A√±adido print para depuraci√≥n)

            # 1. Intentar procesar el mensaje con la l√≥gica de palabras clave
            # La funci√≥n ProcessMessage ahora devuelve True si maneja el mensaje, False si no. (CAMBIO: Llamada a ProcessMessage y captura de su retorno)
            message_handled_by_keywords = ProcessMessage(text, number)

            # 2. Si las palabras clave no manejaron el mensaje, entonces llamar al modelo de lenguaje (Groq) (CAMBIO: L√≥gica condicional para llamar al LLM)
            if not message_handled_by_keywords:
                print(f"No se encontr√≥ palabra clave. Llamando al modelo de lenguaje para: {text}") # (CAMBIO: A√±adido print para depuraci√≥n)
                responseLLM = chatgptservice.GetResponse(text) # Renombrado a responseLLM para claridad (CAMBIO: Renombrado de variable)
                
                if responseLLM != "error": # Asumiendo que GetResponse devuelve "error" en caso de fallo
                    data = util.TextMessage(responseLLM, number)
                else:
                    data = util.TextMessage("Lo siento, ocurri√≥ un problema al obtener la respuesta del asistente. Por favor, int√©ntalo de nuevo m√°s tarde.", number)
                
                whatsappservice.SendMessageWhatsapp(data)
        else:
            # Manejar otros tipos de mensajes (ej. im√°genes, audios) (CAMBIO: A√±adido manejo de tipos de mensaje no soportados)
            print(f"Tipo de mensaje no soportado: {message['type']}")
            # Opcional: enviar un mensaje al usuario diciendo que no soportas ese tipo de mensaje
            # data = util.TextMessage("Lo siento, solo puedo responder a mensajes de texto por ahora.", number)
            # whatsappservice.SendMessageWhatsapp(data)

        return "EVENT_RECEIVED"
    except Exception as e:
        # Captura cualquier excepci√≥n no manejada y la imprime para depuraci√≥n (CAMBIO: Manejo de excepci√≥n general)
        print(f"Error general en ReceivedMessage: {e}") # (CAMBIO: A√±adido print para depuraci√≥n)
        return "EVENT_RECEIVED" # Siempre devuelve 200 OK para WhatsApp, incluso en error

# Funci√≥n para procesar mensajes basados en palabras clave
def ProcessMessage(text, number):
    text_lower = text.lower() # Convertir a min√∫sculas una vez (CAMBIO: Convertido a min√∫sculas una vez al inicio)
    listData = []
    handled = False # Bandera para indicar si el mensaje fue manejado por una palabra clave (CAMBIO: A√±adida nueva variable handled)
    
    # L√≥gica de palabras clave
    if "hola" in text_lower or "opcion" in text_lower or "men√∫" in text_lower: # A√±ad√≠ "men√∫" (CAMBIO: A√±adido "men√∫" a la condici√≥n)
        data = util.TextMessage("üëã ¬°Hola! Soy tu asistente virtual de OFICOMP, listo para ayudarte con todo lo que tu oficina necesita. ¬øEn qu√© puedo asistirte hoy? Escribe 'Men√∫' para ver mis opciones o hazme una pregunta. ‚ú®", number)
        dataMenu = util.ListMessage(number)
        listData.append(data)
        listData.append(dataMenu)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "contacto" in text_lower:
        data = util.TextMessage("¬°Hola! üòä\n\nSi necesitas hablar directamente con uno de nuestros asesores para resolver dudas o recibir atenci√≥n personalizada, haz clic en el siguiente enlace y tu mensaje se enviar√° autom√°ticamente:\n\nüìû Chatea con un Asesor OFICOMP aqu√≠:\nhttps://wa.me/584147171542?text=Hola%2C%20ten%C3%ADa%20una%20duda%20con%20respecto%20a%20algo\n\n¬°Estamos listos para ayudarte!", number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "comprar" in text_lower:
        data = util.TextMessage("¬°Perfecto! ‚ú® ¬øEst√°s listo(a) para hacer tu compra? üí∞\n\nIngresa a este enlace para hablar directamente con nuestro asesor de ventas y √©l te guiar√° en todo el proceso:\n\nüõí Chatea con Ventas aqu√≠:\nhttps://wa.me/584147171542?text=Me%20gustar%C3%ADa%20hacer%20una%20compra\n\n¬°Esperamos tu mensaje!", number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "gracias" in text_lower:
        data = util.TextMessage("¬°A su Orden! En A.C OFICOMP estamos para servirte. ¬øHay algo m√°s en lo que pueda ayudarte?'. ", number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "format" in text_lower:
        data = util.TextFormatMessage(number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "image" in text_lower:
        data = util.ImageMessage(number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "audio" in text_lower:
        data = util.AudioMessage(number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "list" in text_lower:
        data = util.ListMessage(number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "button" in text_lower:
        data = util.ButtonsnMessage(number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "ubicaci√≥n" in text_lower:
        data = util.LocationMessage(number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "regresar" in text_lower:
        data = util.TextMessage("¬øQu√© quieres conocer sobre nuestras categor√≠as de productos?\nElige una opci√≥n üëá:\n\nAqu√≠ tienes nuestras categor√≠as de productos:\n\n1Ô∏è‚É£ Accesorios\n2Ô∏è‚É£ Almohadillas\n3Ô∏è‚É£ Archivadores\n4Ô∏è‚É£ Blocks\n5Ô∏è‚É£ Bol√≠grafos\n6Ô∏è‚É£ Borradores\n7Ô∏è‚É£ Cajas Chicas\n8Ô∏è‚É£ Carpetas\n9Ô∏è‚É£ Carteleras\nüîü Chinches\n1Ô∏è‚É£1Ô∏è‚É£ Cintas\n1Ô∏è‚É£2Ô∏è‚É£ Clips\n1Ô∏è‚É£3Ô∏è‚É£ Compases\n1Ô∏è‚É£4Ô∏è‚É£ Correctores\n1Ô∏è‚É£5Ô∏è‚É£ Creyones\n1Ô∏è‚É£6Ô∏è‚É£ Cuchillas\n1Ô∏è‚É£7Ô∏è‚É£ Sobres\n1Ô∏è‚É£8Ô∏è‚É£ Engrapadoras\n1Ô∏è‚É£9Ô∏è‚É£ Tirros\n2Ô∏è‚É£0Ô∏è‚É£ Fichas", number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "principal" in text_lower:
        data = util.TextMessage("¬øTienes alguna duda?, puedes seleccionar la opci√≥n de contacto", number)
        dataMenu = util.ListMessage(number)
        listData.append(data)
        listData.append(dataMenu)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    ################################################## INVENTARIO #################################################
    elif "inventario" in text_lower:
        data = util.TextMessage("¬øQu√© quieres conocer sobre nuestras categor√≠as de productos?\nElige una opci√≥n üëá:\n\nAqu√≠ tienes nuestras categor√≠as de productos:\n\n1Ô∏è‚É£ Accesorios\n2Ô∏è‚É£ Almohadillas\n3Ô∏è‚É£ Archivadores\n4Ô∏è‚É£ Blocks\n5Ô∏è‚É£ Bol√≠grafos\n6Ô∏è‚É£ Borradores\n7Ô∏è‚É£ Cajas Chicas\n8Ô∏è‚É£ Carpetas\n9Ô∏è‚É£ Carteleras\nüîü Chinches\n1Ô∏è‚É£1Ô∏è‚É£ Cintas\n1Ô∏è‚É£2Ô∏è‚É£ Clips\n1Ô∏è‚É£3Ô∏è‚É£ Compases\n1Ô∏è‚É£4Ô∏è‚É£ Correctores\n1Ô∏è‚É£5Ô∏è‚É£ Creyones\n1Ô∏è‚É£6Ô∏è‚É£ Cuchillas\n1Ô∏è‚É£7Ô∏è‚É£ Sobres\n1Ô∏è‚É£8Ô∏è‚É£ Engrapadoras\n1Ô∏è‚É£9Ô∏è‚É£ Tirros\n2Ô∏è‚É£0Ô∏è‚É£ Fichas", number)
        listData.append(data)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    
    # A√±adir todas las opciones de n√∫meros de inventario
    elif "1" in text_lower: # Accesorios
        data = util.TextMessage("üì¶Pesta√±a Pl√°stica Mayka p/carpeta Colgante", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "2" in text_lower: # Almohadillas
        data = util.TextMessage("üì¶Almohadilla para Sello Mayka N¬∫ 1\nüì¶Almohadilla Dactilar", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "3" in text_lower: # Archivadores
        data = util.TextMessage("üì¶Archivador Lomo Ancho t/carta - Unidad\nüì¶Archivador Acorde√≥n Pl√°stico t/carta - Unidad\nüì¶Archivador Acorde√≥n Pl√°stico t/oficio - Unidad", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "4" in text_lower: # Blocks
        data = util.TextMessage("üì¶Block de Cartulina de Construcci√≥n\nüì¶Block de Notas N¬∫ 3\nüì¶Block de Papel Milimetrado\nüì¶Block de Papel Rotulado 20 H\nüì¶Block de Dibujo Espiral Caribe 6148D", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "5" in text_lower: # Bol√≠grafos
        data = util.TextMessage("üì¶Bol√≠grafo Gel P/fina Printa Colores Surtidos\nüì¶Bol√≠grafo P/Fina Kores Negro, Azul y Rojo\nüì¶Bol√≠grafo P/media Kores Negro", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "6" in text_lower: # Borradores
        data = util.TextMessage("üì¶Borra Nata 620 (E)\nüì¶Borrona Nata 601\nüì¶Porta Borra Tipo L√°piz\nüì¶Borra Nata 612", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "7" in text_lower: # Cajas Chicas
        data = util.TextMessage("üì¶Caja Chica Peque√±a\nüì¶Caja Chica Grande\nüì¶Caja Chica Mediana", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "8" in text_lower: # Carpetas
        data = util.TextMessage("üì¶Carpeta Transparente t/carta\nüì¶Carpeta P/Forma Continua Data N¬∞ 2 91/2x11\nüì¶Carpeta de Fibra Especial 5 Divisiones\nüì¶Carpeta de Fibra 2da t/oficio", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "9" in text_lower: # Carteleras
        data = util.TextMessage("üì¶Cartelera de Corcho 0.90x1.20\nüì¶Cartelera de Corcho 0.60x0.90\nüì¶Cartelera de Corcho 0.45x0.60", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "10" in text_lower: # Chinches
        data = util.TextMessage("üì¶Alfiler P/mapa Barril x 50\nüì¶Chinche Colores Surtidos", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "11" in text_lower: # Cintas
        data = util.TextMessage("üì¶Cinta Adhesiva Celoven 3472 3/4\"\nüì¶Cinta Adhesiva 3/4\"\nüì¶Cinta Doble Faz Transparente Celoven 3/4\" 45 Mtrs.\nüì¶Cinta Adhesiva Celoven 1236 1/2\"\nüì¶Cinta Adhesiva Celoven 3436 3/4\"", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "12" in text_lower: # Clips
        data = util.TextMessage("üì¶Clips Mariposa N¬∫ 3\nüì¶Clips Standard Fixo N¬∫ 1\nüì¶Clips Standard N¬∫ 1", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "13" in text_lower: # Compases
        data = util.TextMessage("üì¶Comp√°s de Precisi√≥n (E)\nüì¶Comp√°s de Precisi√≥n Artesco Mod. 602\nüì¶Comp√°s Escolar Artesco Mod. 101", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "14" in text_lower: # Correctores
        data = util.TextMessage("üì¶Corrector tipo L√°piz Artesco\nüì¶Corrector L√≠quido Kores\nüì¶Corrector tipo L√°piz Kores\nüì¶Corrector L√≠quido Ofimak", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "15" in text_lower: # Creyones
        data = util.TextMessage("üì¶Creyones de Madera Kores 12 Colores\nüì¶Creyones de Madera Kores 36 Colores\nüì¶Creyones de Madera Artesco Jumbo 12 Colores", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "16" in text_lower: # Cuchillas
        data = util.TextMessage("üì¶Cuchilla Exacto N¬∫ 11\nüì¶Repuesto P/cuchilla Peque√±a x 10\nüì¶Cuchilla Peque√±a\nüì¶Cuchilla Grande", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "17" in text_lower: # Tirros (Originalmente "Sobres" en tu lista, pero el texto es de Tirros)
        data = util.TextMessage("üì¶Tirro Celoven 1240 1/2\"\nüì¶Tirro Celoven 3440 3/4\"\nüì¶Tirro Celoven 2140 2\"\nüì¶Tirro P/embalar Morropac Transparente x 90 Mts.\nüì¶Tirro Celoven 1140 1\"", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "18" in text_lower: # Engrapadoras
        data = util.TextMessage("üì¶Engrapadora t/Alicate Printa Tiburon\nüì¶Engrapadora t/Alicate Ofimak Mini 26/6\nüì¶Engrapadora Semi Industrial Ofimak 200 Hojas", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "19" in text_lower: # Sobres (Originalmente "Tirros" en tu lista, pero el texto es de Sobres)
        data = util.TextMessage("üì¶Sobres (Pendiente de definir)", number) 
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    elif "20" in text_lower: # Fichas
        data = util.TextMessage("üì¶Fichas Rayadas 5x8\nüì¶Fichas Rayadas 4x6", number)
        listData.append(data)
        dataBotonesVolver = util.RegresarMessage(number)
        listData.append(dataBotonesVolver)
        handled = True # (CAMBIO: Se establece handled a True si la condici√≥n coincide)
    
    # Si ninguna palabra clave coincide, 'handled' permanece False.
    # NO se env√≠a un mensaje de "no entiendo" desde aqu√≠, para que el LLM pueda responder. (CAMBIO: Eliminado el bloque else original)

    # Env√≠a los mensajes si la l√≥gica de palabras clave los gener√≥
    for item in listData:
        whatsappservice.SendMessageWhatsapp(item)

    return handled # Devuelve True si se manej√≥ por palabra clave, False si no (CAMBIO: La funci√≥n ahora devuelve handled)

if(__name__ == "__main__"):
    app.run(debug=True)
